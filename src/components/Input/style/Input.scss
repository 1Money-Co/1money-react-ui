@use '../../../variable.scss'as *;

$component: 'input';
$cls: #{$prefix}-#{$component};

.#{$cls} {
  display: inline-flex;
  width: 100%;

  &-small {
    font-size: 14px;
    line-height: 20px;
  }

  >input,
  &-text,
  &-mask,
  &-textarea,
  &-password input {
    width: 100%;
    height: 52px;
    padding: 0;
    color: $color-primary-black;
    font-weight: 400;
    font-size: 16px;
    font-family: inherit;
    font-style: normal;
    line-height: 22px;
    background-color: inherit;
    border: none;
    border-radius: 0;
    transition: none;

    &-small {
      height: 40px;
      font-size: 14px;
      line-height: 20px;
    }

    &.p-invalid {
      color: $color-negative;
      box-shadow: none;
    }

    &::placeholder {
      color: $color-grey-dark;
      font-weight: 400;
    }
  }

  // password
  &-password {
    .p-icon-field {
      width: 100%;
      border: inherit;
      border-radius: inherit;
    }

    .p-input-icon {
      right: 0;
      display: inline-flex;
      align-items: center;
      margin-top: 0;
      transform: translateY(-50%);
      cursor: pointer;
    }
  }

  // otp
  &-otp {
    background-color: inherit;
    border: none;

    .p-inputtext:enabled:hover:not(.p-invalid) {
      border-color: $color-primary-black;
    }

    .p-inputotp {
      gap: 8px;
    }

    &-small input {
      width: 42px !important;
      height: 44px !important;
      padding: 8px 12px !important;
      font-size: 14px !important;
    }

    input {
      width: 54px;
      height: 56px;
      padding: 12px 16px;
      color: inherit;
      font-weight: 600;
      font-size: 16px;
      background-color: $color-grey-light;
      border-color: $color-grey-bold;
      border-style: solid;
      border-width: 0.5px;
      border-radius: 8px;

      &.p-invalid {
        color: $color-negative;
        border-color: $color-negative;
        border-width: 2px;
        box-shadow: none;
      }

      &.p-filled:not([value='']) {
        border-color: $color-primary;
        border-width: 2px;
      }

      &:hover {
        border-color: $color-primary-black;
      }
    }
  }

  // focus
  .p-inputtext:enabled:focus:not(.p-invalid, .#{$cls}-success),
  &.p-inputtext:enabled:focus:not(.p-invalid, .#{$cls}-success) {
    border-color: $color-primary;
    border-width: 2px;
    box-shadow: none;
  }

  // invalid
  &.p-invalid {
    color: $color-negative;
    border-color: $color-negative;
    box-shadow: none;

    input {
      border-color: inherit !important;
      box-shadow: inherit !important;
    }
  }

  // success
  &-success {
    color: $color-success;
    box-shadow: none;

    input {
      color: inherit;
    }
  }

  // wrapper
  &-wrapper {
    display: inline-flex;
    flex-direction: column;
  }

  // inner
  &-inner {
    display: inline-flex;
    align-items: center;
    width: 100%;
    overflow: hidden;
    cursor: text;

    &-success {
      border-color: $color-success !important;
    }

    &-invalid {
      border-color: $color-negative !important;
    }

    &-disabled {
      background-color: $color-grey-deep !important;
      border-color: $color-grey-deep !important;
      cursor: not-allowed;

      input {
        opacity: 1;
      }
    }

    &-readonly {
      border-color: $color-grey-bold !important;

      input{
        cursor: default !important;
      }
    }

    &-disabled.#{$cls}-inner-filled {
      background-color: $color-grey !important;
      border-color: $color-grey !important;
      cursor: text;

      input {
        cursor: text;
        user-select: text;
        pointer-events: auto;
      }
    }

    &:not(:has(.#{$cls}-otp)) {
      height: 56px;
      padding: 12px 16px;
      background-color: $color-grey-light;
      border-color: $color-grey-bold;
      border-style: solid;
      border-width: 1px;
      border-radius: 12px;

      &:hover:not(:has(.p-invalid), :has(.p-disabled)) {
        border-color: $color-primary-black;
      }
    }

    &:not(:has(.#{$cls}-otp)).#{$cls}-inner-small {
      height: 44px;

      &:has(.#{$cls}-textarea) {
        height: auto;
      }

      &:has(.#{$cls}-otp) {
        padding: 0;
      }
    }

    &:has(.#{$cls}-textarea) {
      position: relative;
      height: auto;

      textarea {
        min-width: 310px;
        min-height: 120px;
        padding: 0;
      }

      .#{$cls}-textarea-count {
        position: absolute;
        right: 16px;
        bottom: 12px;
        color: $color-grey-dark;
        font-weight: 400;
        font-size: 12px;
        line-height: 15px;
      }
    }

    &:focus-within:not(.#{$cls}-inner-invalid, .#{$cls}-inner-success, .#{$cls}-inner-readonly):not(:has(.#{$cls}-otp)) {
      padding: 11px 15px;
      border-color: $color-primary;
      border-width: 2px;
    }

    input {
      &:-webkit-autofill,
      &:-webkit-autofill:hover,
      &:-webkit-autofill:focus,
      &:-webkit-autofill:active {
        box-shadow: 0 0 0 1000px $color-grey-light inset;
        transition: background-color 600000s 0s, color 600000s 0s !important;
      }

      &:-internal-autofill-selected {
        -webkit-text-fill-color: $color-primary-black !important;
        transition: background-color 600000s 0s, color 600000s 0s !important;
      }
    }
  }

  // label
  &-label {
    display: inline-block;
    margin-bottom: 8px;
    font-weight: 600;
    font-size: 16px;
    font-style: normal;
    line-height: 18px;
    word-wrap: break-word;
    word-break: break-all;

    &-required {
      &::after {
        margin-left: 4px;
        color: $color-negative;
        font-size: 16px;
        font-style: normal;
        line-height: 120%;
        content: '*';
      }
    }
  }

  // message
  &-message {
    display: flex;
    gap: 4px;
    align-items: center;
    justify-content: flex-start;
    margin-top: 4px;
    color: $color-grey-midnight;
    font-weight: 400;
    font-size: 12px;
    font-style: normal;
    line-height: 17px;
    word-wrap: break-word;
    word-break: keep-all;

    &-success {
      color: $color-success;
    }

    &-error {
      color: $color-negative;
    }
  }

  &-prefix {
    margin-right: 8px;
  }

  &-suffix {
    margin-left: 8px;
  }

  &-show-count {
    min-height: 105px !important;
    margin-bottom: 15px;
    resize: none;
  }
}
