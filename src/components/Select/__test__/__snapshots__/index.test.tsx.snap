// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select renders correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="om-react-ui-select-wrapper"
      >
        <div
          class="om-react-ui-select om-react-ui-select-large     p-dropdown p-component p-inputwrapper"
          data-p-disabled="false"
          data-p-focus="false"
          data-pc-name="dropdown"
          data-pc-section="root"
        >
          <div
            class="p-hidden-accessible"
            data-pc-section="hiddenselectedmessage"
          >
            <input
              aria-haspopup="listbox"
              data-pc-section="input"
              readonly=""
              tabindex="0"
              type="text"
            />
          </div>
          <div
            class="p-hidden-accessible p-dropdown-hidden-select"
            data-pc-section="hiddenselectedmessage"
          >
            <select
              data-pc-section="select"
              tabindex="-1"
            >
              <option
                data-pc-section="option"
                selected=""
                value=""
              />
            </select>
          </div>
          <span
            class="p-dropdown-label p-inputtext p-dropdown-label-empty"
            data-pc-section="input"
            tabindex="-1"
          >
             
          </span>
          <div
            aria-expanded="false"
            aria-haspopup="listbox"
            class="p-dropdown-trigger"
            data-pc-section="trigger"
            role="button"
          >
            <svg
              class="om-react-ui-icons"
              fill="none"
              height="20"
              stroke="#808080"
              viewBox="0 0 24 24"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M6 9L12 15L18 9"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div
        class="om-react-ui-select-wrapper"
      >
        <div
          class="om-react-ui-select om-react-ui-select-large     p-multiselect p-component p-inputwrapper"
          data-pc-name="multiselect"
          data-pc-section="root"
        >
          <div
            class="p-hidden-accessible"
            data-p-hidden-accessible="true"
            data-pc-section="hiddeninputwrapper"
          >
            <input
              aria-expanded="false"
              data-pc-section="input"
              readonly=""
              role="combobox"
              tabindex="0"
              type="text"
              value=""
            />
          </div>
          <div
            class="p-multiselect-label-container"
            data-pc-section="labelcontainer"
          >
            <div
              class="p-multiselect-label p-multiselect-label-empty"
              data-pc-section="label"
            >
              empty
            </div>
          </div>
          <div
            class="p-multiselect-trigger"
            data-pc-section="trigger"
          >
            <svg
              class="om-react-ui-icons"
              fill="none"
              height="20"
              stroke="#808080"
              viewBox="0 0 24 24"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M6 9L12 15L18 9"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="om-react-ui-select-wrapper"
    >
      <div
        class="om-react-ui-select om-react-ui-select-large     p-dropdown p-component p-inputwrapper"
        data-p-disabled="false"
        data-p-focus="false"
        data-pc-name="dropdown"
        data-pc-section="root"
      >
        <div
          class="p-hidden-accessible"
          data-pc-section="hiddenselectedmessage"
        >
          <input
            aria-haspopup="listbox"
            data-pc-section="input"
            readonly=""
            tabindex="0"
            type="text"
          />
        </div>
        <div
          class="p-hidden-accessible p-dropdown-hidden-select"
          data-pc-section="hiddenselectedmessage"
        >
          <select
            data-pc-section="select"
            tabindex="-1"
          >
            <option
              data-pc-section="option"
              selected=""
              value=""
            />
          </select>
        </div>
        <span
          class="p-dropdown-label p-inputtext p-dropdown-label-empty"
          data-pc-section="input"
          tabindex="-1"
        >
           
        </span>
        <div
          aria-expanded="false"
          aria-haspopup="listbox"
          class="p-dropdown-trigger"
          data-pc-section="trigger"
          role="button"
        >
          <svg
            class="om-react-ui-icons"
            fill="none"
            height="20"
            stroke="#808080"
            viewBox="0 0 24 24"
            width="20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6 9L12 15L18 9"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Select renders correctly 2`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="om-react-ui-select-wrapper"
      >
        <div
          class="om-react-ui-select om-react-ui-select-large     p-dropdown p-component p-inputwrapper"
          data-p-disabled="false"
          data-p-focus="false"
          data-pc-name="dropdown"
          data-pc-section="root"
        >
          <div
            class="p-hidden-accessible"
            data-pc-section="hiddenselectedmessage"
          >
            <input
              aria-haspopup="listbox"
              data-pc-section="input"
              readonly=""
              tabindex="0"
              type="text"
            />
          </div>
          <div
            class="p-hidden-accessible p-dropdown-hidden-select"
            data-pc-section="hiddenselectedmessage"
          >
            <select
              data-pc-section="select"
              tabindex="-1"
            >
              <option
                data-pc-section="option"
                selected=""
                value=""
              />
            </select>
          </div>
          <span
            class="p-dropdown-label p-inputtext p-dropdown-label-empty"
            data-pc-section="input"
            tabindex="-1"
          >
             
          </span>
          <div
            aria-expanded="false"
            aria-haspopup="listbox"
            class="p-dropdown-trigger"
            data-pc-section="trigger"
            role="button"
          >
            <svg
              class="om-react-ui-icons"
              fill="none"
              height="20"
              stroke="#808080"
              viewBox="0 0 24 24"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M6 9L12 15L18 9"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div
        class="om-react-ui-select-wrapper"
      >
        <div
          class="om-react-ui-select om-react-ui-select-large     p-multiselect p-component p-inputwrapper"
          data-pc-name="multiselect"
          data-pc-section="root"
        >
          <div
            class="p-hidden-accessible"
            data-p-hidden-accessible="true"
            data-pc-section="hiddeninputwrapper"
          >
            <input
              aria-expanded="false"
              data-pc-section="input"
              readonly=""
              role="combobox"
              tabindex="0"
              type="text"
              value=""
            />
          </div>
          <div
            class="p-multiselect-label-container"
            data-pc-section="labelcontainer"
          >
            <div
              class="p-multiselect-label p-multiselect-label-empty"
              data-pc-section="label"
            >
              empty
            </div>
          </div>
          <div
            class="p-multiselect-trigger"
            data-pc-section="trigger"
          >
            <svg
              class="om-react-ui-icons"
              fill="none"
              height="20"
              stroke="#808080"
              viewBox="0 0 24 24"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M6 9L12 15L18 9"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="om-react-ui-select-wrapper"
    >
      <div
        class="om-react-ui-select om-react-ui-select-large     p-multiselect p-component p-inputwrapper"
        data-pc-name="multiselect"
        data-pc-section="root"
      >
        <div
          class="p-hidden-accessible"
          data-p-hidden-accessible="true"
          data-pc-section="hiddeninputwrapper"
        >
          <input
            aria-expanded="false"
            data-pc-section="input"
            readonly=""
            role="combobox"
            tabindex="0"
            type="text"
            value=""
          />
        </div>
        <div
          class="p-multiselect-label-container"
          data-pc-section="labelcontainer"
        >
          <div
            class="p-multiselect-label p-multiselect-label-empty"
            data-pc-section="label"
          >
            empty
          </div>
        </div>
        <div
          class="p-multiselect-trigger"
          data-pc-section="trigger"
        >
          <svg
            class="om-react-ui-icons"
            fill="none"
            height="20"
            stroke="#808080"
            viewBox="0 0 24 24"
            width="20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6 9L12 15L18 9"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
